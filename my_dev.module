<?php
/**
 * @file
 */

/**
 * Implements hook_form_FORM_ID_alter().
 */
function my_dev_form_field_ui_field_overview_form_alter(&$form, &$form_state) {
  module_load_include('inc', 'my_dev', 'my_dev.field');

  $field_types = field_info_field_types();

  $existing_field_options = $form['fields']['_add_existing_field']['field_name']['#options'];
  foreach (_my_dev_get_orphan_field_base() as $field_name => $field_info) {
    drupal_set_message(t('Field @field_name has only a field base without any field instance', array('@field_name' => $field_name)), 'warning');

    $text = t('@type: @field (@label)', array(
      '@type' => $field_types[$field_info['type']]['label'],
      '@label' => '',
      '@field' => $field_name,
    ));
    $existing_field_options[$field_name] = truncate_utf8($text, 80, FALSE, TRUE);
  }
  asort($existing_field_options);

  $form['fields']['_add_existing_field']['field_name']['#options'] = $existing_field_options;
}

/**
 * Custom watchdog function to print an array/object.
 */
function watchdog_printr($type, $variable) {
  watchdog($type, '<pre>' . print_r($variable, true) . '</pre>');
}

/**
 * Implements hook_menu_alter().
 */
function my_dev_menu_alter(&$items) {
  $items['admin/reports/fields']['page callback'] = 'my_dev_field_ui_fields_list';
  $items['admin/reports/fields']['file'] = 'my_dev.field.inc';
}
